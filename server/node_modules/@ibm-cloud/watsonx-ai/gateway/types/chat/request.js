"use strict";
/**
 * (C) Copyright IBM Corp. 2025.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChatsResponseFormatText = exports.ChatsResponseFormatJSONSchema = exports.ChatsResponseFormatJSON = exports.ChatsPrediction = exports.CreateChatCompletionsConstants = void 0;
/** Constants for the `createChatCompletions` operation. */
var CreateChatCompletionsConstants;
(function (CreateChatCompletionsConstants) {
    /** Constrains effort on reasoning for reasoning models. For OpenAI, currently supported by `o1` models only. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response. */
    let ReasoningEffort;
    (function (ReasoningEffort) {
        ReasoningEffort["LOW"] = "low";
        ReasoningEffort["MEDIUM"] = "medium";
        ReasoningEffort["HIGH"] = "high";
    })(ReasoningEffort = CreateChatCompletionsConstants.ReasoningEffort || (CreateChatCompletionsConstants.ReasoningEffort = {}));
})(CreateChatCompletionsConstants = exports.CreateChatCompletionsConstants || (exports.CreateChatCompletionsConstants = {}));
var ChatsPrediction;
(function (ChatsPrediction) {
    let Constants;
    (function (Constants) {
        /** Type of predicted content you want to provide, should always be `"content"`. */
        let Type;
        (function (Type) {
            Type["CONTENT"] = "content";
        })(Type = Constants.Type || (Constants.Type = {}));
    })(Constants = ChatsPrediction.Constants || (ChatsPrediction.Constants = {}));
})(ChatsPrediction = exports.ChatsPrediction || (exports.ChatsPrediction = {}));
var ChatsResponseFormatJSON;
(function (ChatsResponseFormatJSON) {
    let Constants;
    (function (Constants) {
        /** Type of response format being defined, in this case should always be `"json_schema"`. */
        let Type;
        (function (Type) {
            Type["JSON_SCHEMA"] = "json_schema";
        })(Type = Constants.Type || (Constants.Type = {}));
    })(Constants = ChatsResponseFormatJSON.Constants || (ChatsResponseFormatJSON.Constants = {}));
})(ChatsResponseFormatJSON = exports.ChatsResponseFormatJSON || (exports.ChatsResponseFormatJSON = {}));
var ChatsResponseFormatJSONSchema;
(function (ChatsResponseFormatJSONSchema) {
    let Constants;
    (function (Constants) {
        /** Type of response format being defined, in this case should always be `"json_schema"`. */
        let Type;
        (function (Type) {
            Type["JSON_SCHEMA"] = "json_schema";
        })(Type = Constants.Type || (Constants.Type = {}));
    })(Constants = ChatsResponseFormatJSONSchema.Constants || (ChatsResponseFormatJSONSchema.Constants = {}));
})(ChatsResponseFormatJSONSchema = exports.ChatsResponseFormatJSONSchema || (exports.ChatsResponseFormatJSONSchema = {}));
var ChatsResponseFormatText;
(function (ChatsResponseFormatText) {
    let Constants;
    (function (Constants) {
        /** Type of response format being defined, in this case should always be `"json_schema"`. */
        let Type;
        (function (Type) {
            Type["JSON_SCHEMA"] = "json_schema";
        })(Type = Constants.Type || (Constants.Type = {}));
    })(Constants = ChatsResponseFormatText.Constants || (ChatsResponseFormatText.Constants = {}));
})(ChatsResponseFormatText = exports.ChatsResponseFormatText || (exports.ChatsResponseFormatText = {}));
//# sourceMappingURL=request.js.map