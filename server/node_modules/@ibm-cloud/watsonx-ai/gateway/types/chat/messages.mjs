/**
 * (C) Copyright IBM Corp. 2025.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export var ChatsAudioInput;
(function (ChatsAudioInput) {
    let Constants;
    (function (Constants) {
        /** Format of the encoded audio data. Currently supports `"wav"` and `"mp3"`. */
        let Format;
        (function (Format) {
            Format["WAV"] = "wav";
            Format["MP3"] = "mp3";
        })(Format = Constants.Format || (Constants.Format = {}));
    })(Constants = ChatsAudioInput.Constants || (ChatsAudioInput.Constants = {}));
})(ChatsAudioInput || (ChatsAudioInput = {}));
export var ChatsImageURL;
(function (ChatsImageURL) {
    let Constants;
    (function (Constants) {
        /** Detail specifies the detail level of an image.
         * See [OpenAI's Vision guide](https://platform.openai.com/docs/guides/vision#low-or-high-fidelity-image-understanding)
         * for more information. */
        let Detail;
        (function (Detail) {
            Detail["AUTO"] = "auto";
            Detail["LOW"] = "low";
            Detail["HIGH"] = "high";
        })(Detail = Constants.Detail || (Constants.Detail = {}));
    })(Constants = ChatsImageURL.Constants || (ChatsImageURL.Constants = {}));
})(ChatsImageURL || (ChatsImageURL = {}));
export var ChatsTextContentPart;
(function (ChatsTextContentPart) {
    let Constants;
    (function (Constants) {
        /** The type of a content part. */
        let Type;
        (function (Type) {
            Type["REFUSAL"] = "refusal";
        })(Type = Constants.Type || (Constants.Type = {}));
    })(Constants = ChatsTextContentPart.Constants || (ChatsTextContentPart.Constants = {}));
})(ChatsTextContentPart || (ChatsTextContentPart = {}));
//# sourceMappingURL=messages.mjs.map